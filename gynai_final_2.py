# -*- coding: utf-8 -*-
"""GynAI_final_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GXbVhQLL-tbXjcX6maTH-YVWEOo8PSe_
"""

# GynAI ðŸ§  - Inclusive Health AI Demo (with UI) - GenAI Genesis 2025
!pip install cohere ipywidgets

import cohere
import ipywidgets as widgets
from IPython.display import display, Markdown, clear_output

# Cohere API Key
COHERE_API_KEY = "GjSEtmRUVjgqP8TYmymbspx1k64YlW5phbhWnWc3"
co = cohere.Client(COHERE_API_KEY)

# UI Widgets
name_input = widgets.Text(description="Name:")
gender_input = widgets.Dropdown(
    options=["Cis woman", "Trans woman", "Non-binary", "Other"],
    description="Gender:"
)
orientation_input = widgets.Text(description="Orientation:", placeholder="Optional")

symptom_input = widgets.Textarea(
    description="Symptoms:",
    placeholder="Describe your symptoms here...",
    layout=widgets.Layout(width='100%', height='100px')
)

analyze_button = widgets.Button(description="Analyze", button_style="success")

output_area = widgets.Output()

# Callback Function
def analyze_health_data(b):
    with output_area:
        clear_output()
        name = name_input.value
        gender = gender_input.value
        orientation = orientation_input.value
        symptoms = symptom_input.value

        prompt = f"""
Name: {name}
Gender identity: {gender}
Sexual orientation: {orientation}
Symptoms: {symptoms}

Analyze the symptoms considering the user's gender identity. Evaluate if they could be related to conditions such as:
-Silent heart attacks
-Thyroid disorders (hypo/hyperthyroidism)
-PCOS
-Hypertension
-Diabetes
-Allergies (IgE-based)
-Hepatitis B
-herpes simplex virus
-Human papillomavirus (HPV)

Give a non-diagnostic hypothesis and inclusive health recommendation. Avoid any assumptions or gender bias.
"""

        response = co.generate(
            model='command',
            prompt=prompt,
            max_tokens=250,
            temperature=0.7
        )

        display(Markdown(f"### ðŸ©º Analysis for **{name}**"))
        display(Markdown(f"**Gender identity:** {gender}  |  **Orientation:** {orientation}"))
        display(Markdown(f"**Symptoms:** {symptoms}"))
        display(Markdown(f"**GynAI Response:**\n\n{response.generations[0].text.strip()}"))

# Link button to function
analyze_button.on_click(analyze_health_data)

# Display UI
display(Markdown("## ðŸ¤– GynAI - Inclusive Health Demo"))
display(name_input, gender_input, orientation_input, symptom_input, analyze_button, output_area)